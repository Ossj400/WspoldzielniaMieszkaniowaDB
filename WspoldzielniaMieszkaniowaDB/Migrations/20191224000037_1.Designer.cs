// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WspoldzielniaMieszkaniowaDB.Models;

namespace WspoldzielniaMieszkaniowaDB.Migrations
{
    [DbContext(typeof(WspoldzielniaContext))]
    [Migration("20191224000037_1")]
    partial class _1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WspoldzielniaMieszkaniowaDB.Models.Elektryk", b =>
                {
                    b.Property<int>("ElectricianId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Electrician_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ElName")
                        .IsRequired()
                        .HasColumnName("EL_FIRTS_NAME")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ElSurname")
                        .IsRequired()
                        .HasColumnName("EL_LAST_NAME")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("ElectricianId");

                    b.ToTable("Electricians");
                });

            modelBuilder.Entity("WspoldzielniaMieszkaniowaDB.Models.Mieszkanie", b =>
                {
                    b.Property<int>("FlatId")
                        .HasColumnName("Flat_ID")
                        .HasColumnType("int");

                    b.Property<int>("FkFamilyId")
                        .HasColumnName("Family_ID")
                        .HasColumnType("int");

                    b.Property<decimal>("FlatCost")
                        .HasColumnName("Flat_COST")
                        .HasColumnType("money");

                    b.HasKey("FlatId");

                    b.HasIndex("FkFamilyId")
                        .IsUnique();

                    b.ToTable("Flat");
                });

            modelBuilder.Entity("WspoldzielniaMieszkaniowaDB.Models.Mieszkaniec", b =>
                {
                    b.Property<int>("OccupantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Occupant_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnName("Occupant_Age")
                        .HasColumnType("int");

                    b.Property<int>("FkFamilyId")
                        .HasColumnName("Family_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnName("SURNAME")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("OccupantId");

                    b.HasIndex("FkFamilyId");

                    b.ToTable("Occupant");
                });

            modelBuilder.Entity("WspoldzielniaMieszkaniowaDB.Models.Osiedle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NazwaOs")
                        .HasColumnName("NazwaOsiedla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rentowność")
                        .IsRequired()
                        .HasColumnName("WskaźnikRentowności")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RentownośćRozróżnianie")
                        .IsRequired()
                        .HasColumnName("TypSpółdzielni")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OSIEDLA");

                    b.HasDiscriminator<string>("RentownośćRozróżnianie").HasValue("Osiedlaa");
                });

            modelBuilder.Entity("WspoldzielniaMieszkaniowaDB.Models.Piwnica", b =>
                {
                    b.Property<int>("BasementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BASEMENT ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FlatId")
                        .HasColumnType("int");

                    b.HasKey("BasementId");

                    b.HasIndex("FlatId")
                        .IsUnique();

                    b.ToTable("Basement");
                });

            modelBuilder.Entity("WspoldzielniaMieszkaniowaDB.Models.PraceElektryczne", b =>
                {
                    b.Property<int>("WorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("WorkID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cost")
                        .HasColumnName("COST")
                        .HasColumnType("money");

                    b.Property<int>("FlatId")
                        .HasColumnName("Flat_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("WorkDate")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2");

                    b.HasKey("WorkId");

                    b.HasAlternateKey("FlatId");

                    b.HasAlternateKey("FlatId", "WorkId");

                    b.ToTable("Electric_Works");
                });

            modelBuilder.Entity("WspoldzielniaMieszkaniowaDB.Models.Rodzina", b =>
                {
                    b.Property<int>("FamilyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FAMILY_ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FamilySurname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FamilyId");

                    b.ToTable("Family");
                });

            modelBuilder.Entity("WspoldzielniaMieszkaniowaDB.Models.ZleceniaElektryków", b =>
                {
                    b.Property<int>("ElectricianId")
                        .HasColumnName("Electrician_ID")
                        .HasColumnType("int");

                    b.Property<int>("ElectricianWorkId")
                        .HasColumnName("ElectricianWorkID")
                        .HasColumnType("int");

                    b.HasKey("ElectricianId", "ElectricianWorkId");

                    b.HasIndex("ElectricianWorkId");

                    b.ToTable("ElectricianJob");
                });

            modelBuilder.Entity("WspoldzielniaMieszkaniowaDB.Models.Blok", b =>
                {
                    b.HasBaseType("WspoldzielniaMieszkaniowaDB.Models.Osiedle");

                    b.Property<int>("Nr")
                        .HasColumnName("NumerBloku")
                        .HasColumnType("int");

                    b.Property<string>("Ulica")
                        .IsRequired()
                        .HasColumnName("Ulica")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.ToTable("OSIEDLA");

                    b.HasDiscriminator().HasValue("Blok");
                });

            modelBuilder.Entity("WspoldzielniaMieszkaniowaDB.Models.Klatka", b =>
                {
                    b.HasBaseType("WspoldzielniaMieszkaniowaDB.Models.Blok");

                    b.Property<string>("NrKlatki")
                        .IsRequired()
                        .HasColumnName("NrKlatki")
                        .HasColumnType("nvarchar(5)")
                        .HasMaxLength(5);

                    b.Property<float>("Oplaty")
                        .HasColumnName("OplatyZaMediaWspoldzielone")
                        .HasColumnType("real");

                    b.ToTable("OSIEDLA");

                    b.HasDiscriminator().HasValue("Klatka");
                });

            modelBuilder.Entity("WspoldzielniaMieszkaniowaDB.Models.Mieszkanie", b =>
                {
                    b.HasOne("WspoldzielniaMieszkaniowaDB.Models.Rodzina", "Family")
                        .WithOne("Mieszkania")
                        .HasForeignKey("WspoldzielniaMieszkaniowaDB.Models.Mieszkanie", "FkFamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WspoldzielniaMieszkaniowaDB.Models.Mieszkaniec", b =>
                {
                    b.HasOne("WspoldzielniaMieszkaniowaDB.Models.Rodzina", "Family")
                        .WithMany()
                        .HasForeignKey("FkFamilyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WspoldzielniaMieszkaniowaDB.Models.Piwnica", b =>
                {
                    b.HasOne("WspoldzielniaMieszkaniowaDB.Models.Mieszkanie", "Flat")
                        .WithOne("Basement")
                        .HasForeignKey("WspoldzielniaMieszkaniowaDB.Models.Piwnica", "FlatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WspoldzielniaMieszkaniowaDB.Models.PraceElektryczne", b =>
                {
                    b.HasOne("WspoldzielniaMieszkaniowaDB.Models.Mieszkanie", "Flat")
                        .WithMany("ElectricWorks")
                        .HasForeignKey("FlatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WspoldzielniaMieszkaniowaDB.Models.ZleceniaElektryków", b =>
                {
                    b.HasOne("WspoldzielniaMieszkaniowaDB.Models.Elektryk", "Electrician")
                        .WithMany("ElectricWorks")
                        .HasForeignKey("ElectricianId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WspoldzielniaMieszkaniowaDB.Models.PraceElektryczne", "ElectricWorks")
                        .WithMany("ElectricWorks")
                        .HasForeignKey("ElectricianWorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
